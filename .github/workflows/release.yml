name: Build

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Version name (default is ref name)'

env:
  # $VERSION is used by release scripts
  VERSION: ${{ github.event.inputs.name || github.ref_name }}

jobs:
  test-scrcpy-server:
    runs-on: ubuntu-latest
    env:
      GRADLE: gradle  # use native gradle instead of ./gradlew in scripts
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Test scrcpy-server
        run: release/test_server.sh

  build-scrcpy-server:
    runs-on: ubuntu-latest
    env:
      GRADLE: gradle  # use native gradle instead of ./gradlew in scripts
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build scrcpy-server
        run: release/build_server.sh

      - name: Upload scrcpy-server artifact
        uses: actions/upload-artifact@v4
        with:
          name: scrcpy-server
          path: release/work/build-server/server/scrcpy-server

  test-build-scrcpy-server-without-gradle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build scrcpy-server without gradle
        run: server/build_without_gradle.sh

  test-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y meson ninja-build nasm ffmpeg libsdl2-2.0-0 \
             libsdl2-dev libavcodec-dev libavdevice-dev libavformat-dev \
             libavutil-dev libswresample-dev libusb-1.0-0 libusb-1.0-0-dev \
             libv4l-dev

      - name: Test
        run: release/test_client.sh


  build-macos-aarch64:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
            brew install meson ninja nasm libiconv zlib automake autoconf \
                libtool

      - name: Build macOS-aarch64
        run: release/build_macos-aarch64.sh

      # upload-artifact does not preserve permissions
      - name: Tar
        run: |
            cd release/work/build-macos-aarch64
            mkdir dist-tar
            cd dist-tar
            tar -C .. -cvf dist.tar.gz dist/

      - name: Upload build-macos-aarch64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-macos-aarch64-intermediate
          path: release/work/build-macos-aarch64/dist-tar/

  build-macos-intel:
    runs-on: macos-13
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
            brew install meson ninja nasm libiconv zlib automake autoconf \
                libtool

      - name: Build macOS-intel
        run: release/build_macos-intel.sh

      # upload-artifact does not preserve permissions
      - name: Tar
        run: |
            cd release/work/build-macos-intel
            mkdir dist-tar
            cd dist-tar
            tar -C .. -cvf dist.tar.gz dist/

      - name: Upload build-macos-intel artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-macos-intel-intermediate
          path: release/work/build-macos-intel/dist-tar/

  package-macos-aarch64:
    needs:
      - build-scrcpy-server
      - build-macos-aarch64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download scrcpy-server
        uses: actions/download-artifact@v4
        with:
          name: scrcpy-server
          path: release/work/build-server/server/

      - name: Download build-macos-aarch64
        uses: actions/download-artifact@v4
        with:
          name: build-macos-aarch64-intermediate
          path: release/work/build-macos-aarch64/dist-tar/

      # upload-artifact does not preserve permissions
      - name: Detar
        run: |
            cd release/work/build-macos-aarch64
            tar xf dist-tar/dist.tar.gz

      - name: Package macos-aarch64
        run: release/package_client.sh macos-aarch64 tar.gz

      - name: Upload macos-aarch64 release
        uses: actions/upload-artifact@v4
        with:
          name: release-macos-aarch64
          path: release/output/
  
  package-macos-intel:
    needs:
      - build-scrcpy-server
      - build-macos-intel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download scrcpy-server
        uses: actions/download-artifact@v4
        with:
          name: scrcpy-server
          path: release/work/build-server/server/

      - name: Download build-macos-intel
        uses: actions/download-artifact@v4
        with:
          name: build-macos-intel-intermediate
          path: release/work/build-macos-intel/dist-tar/

      # upload-artifact does not preserve permissions
      - name: Detar
        run: |
            cd release/work/build-macos-intel
            tar xf dist-tar/dist.tar.gz

      - name: Package macos-intel
        run: release/package_client.sh macos-intel tar.gz

      - name: Upload macos-intel release
        uses: actions/upload-artifact@v4
        with:
          name: release-macos-intel
          path: release/output/